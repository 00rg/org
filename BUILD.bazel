load(
    "//bazel:rules.bzl",
    "helm_template",
    "install_third_party_manifests",
    "istio_operator",
    "k3d_targets",
    "kustomize_build",
)

# The following directive is required to prevent Gazelle errors when calling the
# :gazelle_generate_targets target against packages (not entirely sure why but see
# https://github.com/bazelbuild/bazel-gazelle/issues/378#issuecomment-440432250).
# gazelle:prefix

# Mapping of third-party manifest targets to where they should be installed.
_THIRD_PARTY_MANIFESTS = {
    "//:argocd_ha_manifest": "config/platform/argocd/overlays/management/argocd.gen.yaml",
    "//:argocd_non_ha_manifest": "config/platform/argocd/overlays/local/argocd.gen.yaml",
    "//:crossplane_manifest": "config/platform/crossplane-base/base/crossplane.gen.yaml",
    "//:istio_operator_manifest": "config/platform/istio-operator/base/istio-operator.gen.yaml",
    "//:vector_agent_manifest": "config/platform/vector/components/vector-agent/vector-agent.gen.yaml",
    "//:vector_aggregator_manifest": "config/platform/vector/components/vector-aggregator/vector-aggregator.gen.yaml",
}

istio_operator(
    name = "istio_operator_manifest",
)

kustomize_build(
    name = "argocd_non_ha_manifest",
    srcs = ["@argocd//:all"],
    dirs = ["external/argocd/cluster-install"],
)

kustomize_build(
    name = "argocd_ha_manifest",
    srcs = ["@argocd//:all"],
    dirs = [
        "external/argocd/crds",
        "external/argocd/ha/namespace-install",
    ],
)

helm_template(
    name = "crossplane_manifest",
    srcs = ["@crossplane//:all"],
    chart_dir = "external/crossplane",
    namespace = "crossplane-system",
    release_name = "crossplane",
    values_file = "//bazel/third_party/crossplane:crossplane.values.yaml",
)

helm_template(
    name = "vector_agent_manifest",
    srcs = ["@vector//:all"],
    chart_dir = "external/vector",
    namespace = "vector",
    release_name = "vector-agent",
    values_file = "//bazel/third_party/vector:vector-agent.values.yaml",
)

helm_template(
    name = "vector_aggregator_manifest",
    srcs = ["@vector//:all"],
    chart_dir = "external/vector",
    namespace = "vector",
    release_name = "vector-aggregator",
    values_file = "//bazel/third_party/vector:vector-aggregator.values.yaml",
)

install_third_party_manifests(
    name = "install_third_party_manifests",
    manifests = _THIRD_PARTY_MANIFESTS,
)

k3d_targets(name = "k3d")
